---
- name: Create Build Directory
  connection: local
  tags: build
  file: path=./roles/cisco-hostname/build/ state=directory
  when:
    - ansible_check_mode
    - not ansible_check_mode

- name: Bild Cisco Configuration CLI from Template
  connection: local
  tags: 
    - build
    - cli
  template:
    src: config-cli.j2 
    dest: ./roles/cisco-hostname/build/{{ inventory_hostname }}-config.txt
  when:
    - ansible_check_mode
    - not ansible_check_mode

- name: Create Config Backup Directory
  connection: local
  tags: 
    - state
    - bak
  file: path=./roles/cisco-hostname/config/ state=directory

- name: Take a Configuration Backup from Device
  connection: local
  tags: 
    - bak
    - state
  ios_config:
    host: "{{ ansible_ssh_host }}"
    username: "{{ ansible_ssh_user }}"
    password: "{{ ansible_ssh_password }}"
    backup: yes
  ignore_errors: yes

- name: Create Device State Directory
  connection: local
  tags: 
    - state
    - bak
  file: path=./roles/cisco-hostname/config/ state=directory

- name: Get current State of the device
  connection: local 
  tags: 
    - bak
    - state
  ignore_errors: yes
  ios_facts:
      host: "{{ ansible_ssh_host }}"
      username: "{{ ansible_ssh_user }}"
      password: "{{ ansible_ssh_password }}"
  register: iosfacts_out

- name: Copy Device State to File
  tags:
    - bak
    - state
  connection: local
  ignore_errors: yes
  copy: content="{{ iosfacts_out | to_nice_json }}" dest=./state/{{inventory_hostname}}_iosfacts.json

- name: Check startup to running config and write to startup config
  connection: local
  tags: 
    - bak
    - state
  ios_config:
    host: "{{ ansible_ssh_host }}"
    username: "{{ ansible_ssh_user }}"
    password: "{{ ansible_ssh_password }}"
    diff_against: startup
    save_when: always
  ignore_errors: yes


# Set Hostname on Device from Template
- name: Deploy Switch Config Hostname on CLI
  connection: local
  tags:
    - deploy 
    - oam
    - cli
  ios_config:
      host: "{{ ansible_ssh_host }}"
      username: "{{ ansible_ssh_user }}"
      password: "{{ ansible_ssh_password }}"
      lines: hostname {{ inventory_hostname }}
  when:
    - not ansible_check_mode